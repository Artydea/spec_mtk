
用户算法如果函数为：BYTE UserAppAlg(BYTE xdata *inbuf,BYTE xdata *outbuf)


本例子中输入数据inbuf[1]表示的是不同的运算功能

如果inbuf[1]==1,则执行 test_fun1 函数;
如果inbuf[1]==2,则执行 test_fun2 函数;
如果inbuf[1]==3,则执行 test_fun3 函数;


//===========================================
test_fun1 函数：DES加密演示
假设输入：inbuf = {0x12,0x01,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x08,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88},
inbuf[1]==0x01,表示执行test_fun1,
inbuf[2]~inbuf[8] 表示8字节KEY
执行 test_fun1 后, outbuf 的内容为 {0x08,0x6C,0x5E,0x94,0xDC,0xAD,0xD3,0x9F,0x1D};
outbuf[0],表示加密后数据的长度
outbuf[1]~outbuf[8],表示加密后的结果


//===========================================
test_fun2 函数：XOR 运算
假设输入：inbuf = {0x11, 0x02, 0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA,0xAA ,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
inbuf[1]==0x02,表示执行test_fun2,
执行 test_fun2 后, outbuf 的内容为 {0x08,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55};
outbuf[0],表示输出数据的长度
outbuf[1]~outbuf[8],表示XOR结果


//===========================================
test_fun3 函数：取16字节随机数。调用了芯片内置函数GetRandomData;
假设输入：inbuf = {0x01,0x03},
inbuf[1]==0x03,表示执行test_fun3,
执行 test_fun3 后, outbuf 的内容为 {0x10,0x39,0xFD,0x0C,0x07,0x9A,0x9D,0x2C,0x4B,0xE9,0x71,0x4F,0x40,0x80,0xD6,0x1E,0x4B}
outbuf[0],表示输出数据的长度
outbuf[1]~outbuf[16],表示16字节的随机数

 
 
//=============================================================================
以下为基于7816, T=0协议具体的APDU 演示：

注：在调试T=0协议时以下步骤只适合于使用烧录器进行操作，自己编写测试代码时请参照串行通讯接口例程进行操作。

// test_fun1
<- 8008 0000 12 010102030405060708 08 1122334455667788  
-> 61 08 
<- 00C0 0000 08 
-> 6C5E94DCADD39F1D 9000

// test_fun2
<- 8008 0000 11 02 AAAAAAAAAAAAAAAA FFFFFFFFFFFFFFFF
-> 61 08 
<- 00C0 0000 08 
-> 5555555555555555 9000 

// test_fun3取16字节随机数
<- 8008 0000 01 03
-> 61 10 
<- 00C0 0000 10 
-> 39FD0C079A9D2C4BE9714F4080D61E4B 90 00 


//=============================================================================
以下为基于自定义A3协议演示:

// test_fun1
<- A3  12 010102030405060708081122334455667788
-> A3  08 6C5E94DCADD39F1D


// test_fun2
<- A3 A3  11 02 AAAAAAAAAAAAAAAA FFFFFFFFFFFFFFFF
-> A3 08 5555555555555555 

// test_fun3取16字节随机数
<- A3 01 03
-> A3 10 4B70C4D7E5771BF6E621EAC5303C514F 

